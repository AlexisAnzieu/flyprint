// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String     @id @default(cuid())
    name      String
    unifiedId String     @unique
    email     String     @unique
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    flybooths Flybooth[]
}

model Text {
    id         String    @id @default(cuid())
    content    String?
    flybooth   Flybooth? @relation(fields: [flyboothId], references: [id])
    flyboothId String?
    createdAt  DateTime  @default(now()) @map(name: "created_at")
    updatedAt  DateTime  @updatedAt @map(name: "updated_at")
}

model Flybooth {
    id         String   @id @default(cuid())
    createdAt  DateTime @default(now()) @map(name: "created_at")
    updatedAt  DateTime @updatedAt @map(name: "updated_at")
    texts      Text[]
    hasTime    Boolean  @default(true) @map(name: "has_time")
    logoWidth  Int      @default(200) @map(name: "logo_width")
    logoHeight Int      @default(200) @map(name: "logo_height")
    Print      Print[]
    User       User?    @relation(fields: [userId], references: [id])
    userId     String?
}

model Print {
    id         String   @id @default(cuid())
    pictureUrl String
    flybooth   Flybooth @relation(fields: [flyboothId], references: [id])
    flyboothId String
    message    String?  @db.Text
    createdAt  DateTime @default(now())
}
